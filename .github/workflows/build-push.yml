name: CI & CD

# Reference:
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on: [push, pull_request]

# Reference
# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions

jobs:
  test:
    name: Test package ROS2
    runs-on: ubuntu-latest
    steps:
      - name: setup directories
        run: mkdir -p ros_ws/src
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: ros_ws/src
      - name: Install ros2_system_manager extra dependencies
        run: |
          # Display Python version
          python3 -c "import sys; print(sys.version)"
          # Make group ros2sm
          sudo groupadd ros2sm
          # Upgrade documentation
          sudo -H python3 -m pip install --upgrade pydocstyle
      # https://github.com/ros-tooling/action-ros-ci
      - uses: ros-tooling/setup-ros@0.3.1
        with:
          required-ros-distributions: foxy
      - uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: ros2_system_manager
          target-ros2-distro: foxy
          skip-tests: true

  # https://github.com/docker/build-push-action/issues/225
  docker:
    name: "Build Docker image develop"
    needs: [test]
    runs-on: ubuntu-latest #self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
    - name: Docker meta
      id: meta
      uses: crazy-max/ghaction-docker-meta@v4.0.1
      with:
        images: rbonghi/ros2_system_manager
        # generate Docker tags based on the following events/attributes
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=ref,event=tag
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2.0.0 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v3.0.0
      with:
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64

  deploy:
    name: Deploy on PIP
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          sudo apt-get install twine -y
          sudo -H python3 -m pip install --upgrade pip
          sudo -H pip3 install setuptools wheel twine
      - uses: actions/checkout@v3
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          sudo python3 setup.py sdist
          twine upload dist/*